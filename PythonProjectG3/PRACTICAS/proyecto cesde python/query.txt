create table customer(
	customer_id int primary key not null,
    customer_name varchar(50) not null,
    customer_last_name varchar(50) not null,
    customer_email varchar(50) not null,
    customer_password varchar(50) not null,
    customer_address varchar(50) not null
);

create table employee(
	employee_id int primary key not null,
    employee_name varchar(50) not null,
    employee_last_name varchar(50) not null,
    employee_email varchar(50) not null,
    employee_password varchar(50) not null,
    job_position varchar(50) not null,
    salary decimal(10, 2)
);

create table category(
	category_id int primary key AUTO_INCREMENT not null,
    category_name varchar(50) not null
);

create table book(
	book_id int primary key AUTO_INCREMENT not null,
    book_name varchar(50) not null,
    book_category_id int not null,
    author varchar(50) not null,
    foreign key (book_category_id) references category(category_id)
);

create table sanction(
	customer int not null,
    comment varchar(200) not null,
    sanction_date datetime not null,
    foreign key (customer) references customer(customer_id)
);

create table activity_history(
	customer_id int not null,
    book_id int not null,
    comment varchar(50) not null,
    activity_date datetime not null,
    foreign key (customer_id) references customer(customer_id),
    foreign key (book_id) references book(book_id)
);

create table petition(
	petition_id int primary key AUTO_INCREMENT not null,
    customer_id int not null,
    book_id int not null,
    petition_date datetime not null,
    FOREIGN key (customer_id) references customer(customer_id),
    foreign key (book_id) references book(book_id)
);

create table petition_status(
	petition_id int not null,
    petition_status boolean not null,
    foreign key (petition_id) references petition(petition_id)
);

create table user_log_sign(
	id int not null,
    user_name varchar(50) not null,
    user_password varchar(50) not null
)